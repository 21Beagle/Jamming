{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JackB\\\\jamming\\\\src\\\\components\\\\App\\\\App.js\";\nimport React from 'react';\nimport './App.css';\nimport SearchBar from '../SearchBar/SearchBar';\nimport SearchResults from '../SearchResults/SearchResults';\nimport Playlist from '../Playlist/Playlist';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchResults: [{\n        name: 'name1',\n        artist: 'artist1',\n        album: 'album1',\n        id: 1\n      }, {\n        name: 'name2',\n        artist: 'artist2',\n        album: 'album2',\n        id: 2\n      }, {\n        name: 'name3',\n        artist: 'artist3',\n        album: 'album3',\n        id: 3\n      }],\n      playlistTracks: [{\n        name: 'name4',\n        artist: 'artist4',\n        album: 'album4',\n        id: 4\n      }, {\n        name: 'name5',\n        artist: 'artist5',\n        album: 'album5',\n        id: 5\n      }, {\n        name: 'name5',\n        artist: 'artist5',\n        album: 'album5',\n        id: 6\n      }],\n      playlistName: \"playlist1\"\n    };\n    this.addTrack = this.addTrack.bind(this);\n    this.removeTrack = this.removeTrack.bind(this);\n    this.updatePlaylistName = this.updatePlaylistName.bind(this);\n    this.savePlaylist = this.savePlaylist.bind(this);\n  }\n\n  addTrack(track) {\n    let tracks = this.state.playlistTracks;\n\n    if (tracks.find(savedTrack => savedTrack.id === track.id)) {\n      return;\n    }\n\n    tracks.push(track);\n    this.setState({\n      playlistTracks: tracks\n    });\n  }\n\n  removeTrack(track) {\n    let tracks = this.state.playlistTracks;\n    tracks = tracks.filter(currentTrack => currentTrack.id !== track.id);\n    this.setState({\n      playlistTracks: tracks\n    });\n  }\n\n  updatePlaylistName(name) {\n    this.setState({\n      playlistName: name\n    });\n  }\n\n  savePlaylist() {\n    const trackUris = this.state.playlistTracks.map(track => {\n      track.uri;\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Ja\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"highlight\",\n          children: \"mmm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this), \"ing\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(SearchBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"App-playlist\",\n          children: [/*#__PURE__*/_jsxDEV(SearchResults, {\n            searchResults: this.state.searchResults,\n            onAdd: this.addTrack\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Playlist, {\n            playlistName: this.state.playlistName,\n            playlistTracks: this.state.playlistTracks,\n            onRemove: this.removeTrack,\n            onNameChange: this.updatePlaylistName,\n            onSave: this.savePlaylist\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\n;\nexport default App;","map":{"version":3,"sources":["C:/Users/JackB/jamming/src/components/App/App.js"],"names":["React","SearchBar","SearchResults","Playlist","App","Component","constructor","props","state","searchResults","name","artist","album","id","playlistTracks","playlistName","addTrack","bind","removeTrack","updatePlaylistName","savePlaylist","track","tracks","find","savedTrack","push","setState","filter","currentTrack","trackUris","map","uri","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,OAAOC,QAAP,MAAqB,sBAArB;;;AAIA,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,aAAa,EAAE,CACb;AAACC,QAAAA,IAAI,EAAE,OAAP;AAAeC,QAAAA,MAAM,EAAE,SAAvB;AAAkCC,QAAAA,KAAK,EAAE,QAAzC;AAAmDC,QAAAA,EAAE,EAAE;AAAvD,OADa,EAEb;AAACH,QAAAA,IAAI,EAAE,OAAP;AAAgBC,QAAAA,MAAM,EAAE,SAAxB;AAAmCC,QAAAA,KAAK,EAAE,QAA1C;AAAoDC,QAAAA,EAAE,EAAE;AAAxD,OAFa,EAGb;AAACH,QAAAA,IAAI,EAAE,OAAP;AAAgBC,QAAAA,MAAM,EAAE,SAAxB;AAAmCC,QAAAA,KAAK,EAAE,QAA1C;AAAoDC,QAAAA,EAAE,EAAE;AAAxD,OAHa,CADJ;AAMXC,MAAAA,cAAc,EAAE,CACd;AAACJ,QAAAA,IAAI,EAAE,OAAP;AAAgBC,QAAAA,MAAM,EAAE,SAAxB;AAAmCC,QAAAA,KAAK,EAAE,QAA1C;AAAoDC,QAAAA,EAAE,EAAE;AAAxD,OADc,EAEd;AAACH,QAAAA,IAAI,EAAE,OAAP;AAAgBC,QAAAA,MAAM,EAAE,SAAxB;AAAmCC,QAAAA,KAAK,EAAE,QAA1C;AAAoDC,QAAAA,EAAE,EAAE;AAAxD,OAFc,EAGd;AAACH,QAAAA,IAAI,EAAE,OAAP;AAAgBC,QAAAA,MAAM,EAAE,SAAxB;AAAmCC,QAAAA,KAAK,EAAE,QAA1C;AAAoDC,QAAAA,EAAE,EAAE;AAAxD,OAHc,CANL;AAWXE,MAAAA,YAAY,EAAE;AAXH,KAAb;AAaA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBD,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKE,kBAAL,GAA0B,KAAKA,kBAAL,CAAwBF,IAAxB,CAA6B,IAA7B,CAA1B;AACA,SAAKG,YAAL,GAAoB,KAAKA,YAAL,CAAkBH,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDD,EAAAA,QAAQ,CAACK,KAAD,EAAQ;AACd,QAAIC,MAAM,GAAG,KAAKd,KAAL,CAAWM,cAAxB;;AACA,QAAIQ,MAAM,CAACC,IAAP,CAAYC,UAAU,IAAIA,UAAU,CAACX,EAAX,KAAkBQ,KAAK,CAACR,EAAlD,CAAJ,EAA2D;AACzD;AACD;;AACDS,IAAAA,MAAM,CAACG,IAAP,CAAYJ,KAAZ;AACA,SAAKK,QAAL,CAAc;AAACZ,MAAAA,cAAc,EAAEQ;AAAjB,KAAd;AACD;;AACDJ,EAAAA,WAAW,CAACG,KAAD,EAAQ;AACjB,QAAIC,MAAM,GAAG,KAAKd,KAAL,CAAWM,cAAxB;AACAQ,IAAAA,MAAM,GAAGA,MAAM,CAACK,MAAP,CAAcC,YAAY,IAAIA,YAAY,CAACf,EAAb,KAAoBQ,KAAK,CAACR,EAAxD,CAAT;AACA,SAAKa,QAAL,CAAc;AAACZ,MAAAA,cAAc,EAAEQ;AAAjB,KAAd;AACD;;AACDH,EAAAA,kBAAkB,CAACT,IAAD,EAAO;AACvB,SAAKgB,QAAL,CAAc;AAACX,MAAAA,YAAY,EAAEL;AAAf,KAAd;AACD;;AACDU,EAAAA,YAAY,GAAG;AACb,UAAMS,SAAS,GAAG,KAAKrB,KAAL,CAAWM,cAAX,CAA0BgB,GAA1B,CAA8BT,KAAK,IAAI;AACvDA,MAAAA,KAAK,CAACU,GAAN;AAAU,KADM,CAAlB;AAED;;AACDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AAAA,sCAAM;AAAM,UAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAN;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,gCAEE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,gBAFF,eAIE;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,kCAEE,QAAC,aAAD;AACA,YAAA,aAAa,EAAE,KAAKxB,KAAL,CAAWC,aAD1B;AAEA,YAAA,KAAK,EAAE,KAAKO;AAFZ;AAAA;AAAA;AAAA;AAAA,kBAFF,eAME,QAAC,QAAD;AACA,YAAA,YAAY,EAAE,KAAKR,KAAL,CAAWO,YADzB;AAEA,YAAA,cAAc,EAAE,KAAKP,KAAL,CAAWM,cAF3B;AAGA,YAAA,QAAQ,EAAE,KAAKI,WAHf;AAIA,YAAA,YAAY,EAAE,KAAKC,kBAJnB;AAKA,YAAA,MAAM,EAAI,KAAKC;AALf;AAAA;AAAA;AAAA;AAAA,kBANF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAwBD;;AApE+B;;AAqEjC;AAID,eAAehB,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport SearchBar from '../SearchBar/SearchBar';\nimport SearchResults from '../SearchResults/SearchResults'\nimport Playlist from '../Playlist/Playlist';\n\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      searchResults: [\n        {name: 'name1',artist: 'artist1', album: 'album1', id: 1},\n        {name: 'name2', artist: 'artist2', album: 'album2', id: 2},\n        {name: 'name3', artist: 'artist3', album: 'album3', id: 3}\n      ],\n      playlistTracks: [\n        {name: 'name4', artist: 'artist4', album: 'album4', id: 4},\n        {name: 'name5', artist: 'artist5', album: 'album5', id: 5},\n        {name: 'name5', artist: 'artist5', album: 'album5', id: 6}\n      ],\n      playlistName: \"playlist1\"\n    };\n    this.addTrack = this.addTrack.bind(this);\n    this.removeTrack = this.removeTrack.bind(this);\n    this.updatePlaylistName = this.updatePlaylistName.bind(this);\n    this.savePlaylist = this.savePlaylist.bind(this);\n  }\n\n  addTrack(track) {\n    let tracks = this.state.playlistTracks;\n    if (tracks.find(savedTrack => savedTrack.id === track.id)) {\n      return;\n    }\n    tracks.push(track);\n    this.setState({playlistTracks: tracks});\n  };\n  removeTrack(track) {\n    let tracks = this.state.playlistTracks;\n    tracks = tracks.filter(currentTrack => currentTrack.id !== track.id);\n    this.setState({playlistTracks: tracks});\n  };\n  updatePlaylistName(name) {\n    this.setState({playlistName: name});\n  };\n  savePlaylist() {\n    const trackUris = this.state.playlistTracks.map(track => {\n      track.uri});\n  }\n  render() {\n    return (\n      <div>\n        <h1>Ja<span className=\"highlight\">mmm</span>ing</h1>\n        <div className=\"App\">\n\n          <SearchBar />\n\n          <div className=\"App-playlist\">\n\n            <SearchResults \n            searchResults={this.state.searchResults} \n            onAdd={this.addTrack}/>\n\n            <Playlist \n            playlistName={this.state.playlistName} \n            playlistTracks={this.state.playlistTracks} \n            onRemove={this.removeTrack} \n            onNameChange={this.updatePlaylistName} \n            onSave = {this.savePlaylist}/>\n\n          </div>\n        </div>\n      </div>\n    )\n  };\n};\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}